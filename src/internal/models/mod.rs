// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]


use chrono::NaiveDate;
use chrono::NaiveDateTime;
#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(category_id))]
pub struct Category {
    pub category_id: i32,
    pub category_name: Option<String>,
    pub category_slug: Option<String>,
    pub category_thumbnail: Option<String>,
    pub parent_id: Option<i32>,
    pub category_active: Option<bool>,
    pub category_show: Option<bool>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(cert_id))]
pub struct Ceritificate {
    pub cert_id: i32,
    pub cert_title: Option<String>,
    pub cert_year: Option<i32>,
    pub cert_link: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(client_id))]
pub struct Client {
    pub client_id: i32,
    pub client_name: Option<String>,
    pub client_logo: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(contact_id))]
pub struct Contact {
    pub contact_id: i32,
    pub contact_title: Option<String>,
    pub contact_name: Option<String>,
    pub contact_icon: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(exp_id))]
pub struct Expertise {
    pub exp_id: i32,
    pub exp_logo: Option<String>,
    pub exp_name: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(faq_id))]
pub struct Faq {
    pub faq_id: i32,
    pub faq_question: Option<String>,
    pub faq_answer: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(post_id))]
pub struct Post {
    pub post_id: i64,
    pub post_title: Option<String>,
    pub post_slug: Option<String>,
    pub post_content: Option<String>,
    pub post_date: Option<NaiveDateTime>,
    pub meta_title: Option<String>,
    pub meta_description: Option<String>,
    pub meta_keyword: Option<String>,
    pub post_status: Option</* TODO: unknown type Nullable<PostPostStatusEnum> */>,
    pub post_type: Option<String>,
    pub post_view: Option<i64>,
    pub user_id: Option<i32>,
    pub post_video_url: Option<String>,
    pub post_excerpt: Option<String>,
    pub first_image: Option<String>,
    pub thumbnail: Option<String>,
    pub medium_thumbnail: Option<String>,
    pub post_trending_topic: Option<bool>,
    pub post_hottopic: Option<bool>,
    pub post_slider: Option<bool>,
    pub post_malayhomeland: Option<bool>,
    pub post_advetorial: Option<bool>,
    pub created_at: Option<NaiveDateTime>,
    pub updated_at: Option<NaiveDateTime>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(cat_id))]
pub struct PostCategory {
    pub cat_id: i64,
    pub category_id: Option<i32>,
    pub post_id: Option<i64>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(t_id))]
pub struct PostTag {
    pub t_id: i64,
    pub tag_id: Option<i32>,
    pub post_id: Option<i64>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(project_id))]
pub struct Project {
    pub project_id: i32,
    pub project_featured_image: Option<String>,
    pub project_title: Option<String>,
    pub project_client: Option<String>,
    pub service_id: Option<i32>,
    pub project_description: Option<String>,
    pub project_situation: Option<String>,
    pub project_task: Option<String>,
    pub project_action: Option<String>,
    pub project_result: Option<String>,
    pub project_conclusion: Option<String>,
    pub project_start: Option<NaiveDate>,
    pub project_end: Option<NaiveDate>,
    pub project_link: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(service_id))]
pub struct Service {
    pub service_id: i32,
    pub service_name: Option<String>,
    pub service_logo: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(setting_id))]
pub struct Setting {
    pub setting_id: i32,
    pub key: Option<String>,
    pub value: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(tag_id))]
pub struct Tag {
    pub tag_id: i32,
    pub tag_name: Option<String>,
    pub tag_slug: Option<String>,
    pub tag_popular: Option<bool>,
    pub tag_count: Option<i32>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(testimonial_id))]
pub struct Testimonial {
    pub testimonial_id: i32,
    pub testimonial_name: Option<String>,
    pub testimonial_photo: Option<String>,
    pub testimonial_review: Option<String>,
    pub testimonial_occuption: Option<String>,
    pub testimonial_company: Option<String>,
}

#[derive(Queryable, Debug, Identifiable)]
pub struct User {
    pub id: i32,
    pub username: Option<String>,
    pub password: Option<String>,
    pub name: Option<String>,
    pub refresh_token: Option<String>,
    pub created_at: Option<NaiveDateTime>,
    pub updated_at: Option<NaiveDateTime>,
}

#[derive(Queryable, Debug, Identifiable)]
#[diesel(primary_key(work_id))]
pub struct Work {
    pub work_id: i32,
    pub work_name: Option<String>,
    pub work_logo: Option<String>,
    pub work_desc: Option<String>,
    pub work_from: Option<NaiveDate>,
    pub work_to: Option<NaiveDate>,
    pub work_until_now: Option<i8>,
}

